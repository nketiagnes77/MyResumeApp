name: Docker Image CI/CD

on:
  push:
    branches: [ "main" ]  # Trigger on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4  # Checkout source code

    - name: Build Docker image
      run: docker build . --file Dockerfile --tag my-image-name:v${{ github.run_number }}

    - name: Docker login
      run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}

    - name: Tag image
      run: docker tag my-image-name:v${{ github.run_number }} ${{ secrets.REGISTRY_USERNAME }}/resume:v${{ github.run_number }}

    - name: Push to DockerHub
      run: docker push ${{ secrets.REGISTRY_USERNAME }}/resume:v${{ github.run_number }}

  deploy:
    needs: build  # Run only if the build job succeeds
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}  # Your SSH private key
        script: |
          docker stop resume || true           # Stop existing container if running
          docker rm resume || true             # Remove existing container
          docker pull ${{ secrets.REGISTRY_USERNAME }}/resume:v${{ github.run_number }}  # Pull new image
          docker run -d --name resume -p 80:80 ${{ secrets.REGISTRY_USERNAME }}/resume:v${{ github.run_number }}  # Start new container
